{"version":3,"sources":["Slider.js","Toggle.js","ImageToggle.js","LockToggle.js","LockingSliderGroup.js","Settings.js","Shape.js","App.js","serviceWorker.js","index.js"],"names":["Slider","props","handleChange","bind","e","this","updateSetting","id","target","value","valueStyle","left","max","className","htmlFor","title","onChange","name","type","min","step","style","React","Component","Toggle","inputRef","createRef","handleClick","checked","current","click","data-active","onClick","ref","ImageToggle","state","selected","setting","getAttribute","LockingSliderGroup","clickHandler","icon","viewBox","d","fill","data-locked","locked","controlledSettings","updateChildSetting","handleLockClick","Children","map","children","k","push","setState","i","length","cs","console","log","kidsWithProps","cloneElement","Settings","settings","elementScaleX","elementScaleY","elementRotation","gridSkew","gridActive","Shape","shape","transform","key","cx","width","cy","r","x","y","height","App","gridID","gridColumns","gridRows","globalScale","padding","letter","prevState","error","rows","cols","elements","g","design","grids","s","p","x1","y1","x2","y2","letters","positions","pos","widthScaled","elementScale","heightScaled","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.d762cd58.chunk.js","sourcesContent":["import React from 'react';\r\nimport './css/Slider.scss';\r\n\r\nexport default class Slider extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n    handleChange(e) {\r\n        this.props.updateSetting(this.props.id, e.target.value)\r\n    }\r\n    render() {\r\n        let valueStyle = {\r\n            left: ((this.props.value / this.props.max) * 100) + '%'\r\n        }\r\n        return (\r\n            <div className='setting slider'>\r\n                <label htmlFor={this.props.id}>{this.props.title}</label>\r\n                <div className='slider-track'>\r\n                    <input className='slider-input' onChange={this.handleChange} name={this.props.id} type='range' min={this.props.min} max={this.props.max} step={this.props.step} value={this.props.value}></input>\r\n                    <div style={valueStyle} className='slider-value'>\r\n                        <input className='value-input' onChange={this.handleChange} name={this.props.id} type='number' min={this.props.min} max={this.props.max} step={this.props.step} value={this.props.value}></input>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport './css/Toggle.scss'\r\n\r\nexport default class Toggle extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.inputRef = React.createRef()\r\n        this.handleClick = this.handleClick.bind(this)\r\n        this.handleChange = this.handleChange.bind(this)\r\n    }\r\n    handleChange(e) {\r\n        const value = e.target.type === 'checkbox' ? e.target.checked : e.target.value;\r\n        this.props.updateSetting(this.props.id, value)\r\n    }\r\n    handleClick(e) {\r\n        this.inputRef.current.click()\r\n    }\r\n    render() {\r\n        return (\r\n            <div className='setting toggle'>\r\n                <label htmlFor={this.props.id}>{this.props.title}</label>\r\n                <div data-active={this.props.value} className=\"toggle-body\" onClick={this.handleClick}>\r\n                    <div className=\"toggle-element\"></div>\r\n                </div>\r\n                <input ref={this.inputRef} onChange={this.handleChange} name={this.props.id} type='checkbox' checked={this.props.value}></input>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\n// const equal = require('fast-deep-equal/es6/react');\r\n\r\nexport default class ImageToggle extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            selected: 0\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n    handleChange(e) {\r\n        const setting = e.target.getAttribute('name');\r\n        const value = e.target.type === 'checkbox' ? e.target.checked : e.target.value;\r\n        this.props.updateSetting(setting, value)\r\n    }\r\n    render() {\r\n        return (\r\n            <div className='setting imageToggle'>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport LockToggle from './LockToggle.js'\r\n\r\nexport default class LockingSliderGroup extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.handleClick = this.handleClick.bind(this)\r\n    }\r\n    handleClick() {\r\n        this.props.clickHandler()\r\n    }\r\n    render() {\r\n        let icon = null;\r\n        if (this.props.value === true) {\r\n            icon =<svg viewBox=\"0 0 24 24\"> <path d=\"M10.59,13.41C11,13.8 11,14.44 10.59,14.83C10.2,15.22 9.56,15.22 9.17,14.83C7.22,12.88 7.22,9.71 9.17,7.76V7.76L12.71,4.22C14.66,2.27 17.83,2.27 19.78,4.22C21.73,6.17 21.73,9.34 19.78,11.29L18.29,12.78C18.3,11.96 18.17,11.14 17.89,10.36L18.36,9.88C19.54,8.71 19.54,6.81 18.36,5.64C17.19,4.46 15.29,4.46 14.12,5.64L10.59,9.17C9.41,10.34 9.41,12.24 10.59,13.41M13.41,9.17C13.8,8.78 14.44,8.78 14.83,9.17C16.78,11.12 16.78,14.29 14.83,16.24V16.24L11.29,19.78C9.34,21.73 6.17,21.73 4.22,19.78C2.27,17.83 2.27,14.66 4.22,12.71L5.71,11.22C5.7,12.04 5.83,12.86 6.11,13.65L5.64,14.12C4.46,15.29 4.46,17.19 5.64,18.36C6.81,19.54 8.71,19.54 9.88,18.36L13.41,14.83C14.59,13.66 14.59,11.76 13.41,10.59C13,10.2 13,9.56 13.41,9.17Z\" /></svg>\r\n        } else {\r\n            icon =<svg viewBox=\"0 0 24 24\">   <path fill=\"currentColor\" d=\"M2,5.27L3.28,4L20,20.72L18.73,22L13.9,17.17L11.29,19.78C9.34,21.73 6.17,21.73 4.22,19.78C2.27,17.83 2.27,14.66 4.22,12.71L5.71,11.22C5.7,12.04 5.83,12.86 6.11,13.65L5.64,14.12C4.46,15.29 4.46,17.19 5.64,18.36C6.81,19.54 8.71,19.54 9.88,18.36L12.5,15.76L10.88,14.15C10.87,14.39 10.77,14.64 10.59,14.83C10.2,15.22 9.56,15.22 9.17,14.83C8.12,13.77 7.63,12.37 7.72,11L2,5.27M12.71,4.22C14.66,2.27 17.83,2.27 19.78,4.22C21.73,6.17 21.73,9.34 19.78,11.29L18.29,12.78C18.3,11.96 18.17,11.14 17.89,10.36L18.36,9.88C19.54,8.71 19.54,6.81 18.36,5.64C17.19,4.46 15.29,4.46 14.12,5.64L10.79,8.97L9.38,7.55L12.71,4.22M13.41,9.17C13.8,8.78 14.44,8.78 14.83,9.17C16.2,10.54 16.61,12.5 16.06,14.23L14.28,12.46C14.23,11.78 13.94,11.11 13.41,10.59C13,10.2 13,9.56 13.41,9.17Z\" /></svg>\r\n        }\r\n        return (\r\n            <button data-locked={this.props.value} onClick={this.handleClick} className='lockToggle'>\r\n                {icon}\r\n            </button>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport LockToggle from './LockToggle.js'\r\n\r\nexport default class LockingSliderGroup extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            locked: true,\r\n            controlledSettings: []\r\n        }\r\n        this.updateChildSetting = this.updateChildSetting.bind(this)\r\n        this.handleLockClick = this.handleLockClick.bind(this)\r\n\r\n        React.Children.map(this.props.children, k => {\r\n            this.state.controlledSettings.push(k.props.id)\r\n        })\r\n\r\n\r\n    }\r\n\r\n    handleLockClick(){\r\n        if (this.state.locked === true){\r\n            this.setState({locked: false});\r\n        } else {\r\n            this.setState({locked: true});\r\n        }\r\n    }\r\n\r\n    updateChildSetting(id, value) {\r\n        this.props.updateSetting(id, value)\r\n        if (this.state.locked === true) {\r\n            for (let i = 0; i < this.state.controlledSettings.length; i++) {\r\n                let cs = this.state.controlledSettings[i];\r\n                console.log(id)\r\n                console.log(cs)\r\n                if (cs !== id) { //avoid loop\r\n                    this.props.updateSetting(cs, value)\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let kidsWithProps = React.Children.map(this.props.children, k => {\r\n            return (React.cloneElement(k, { 'updateSetting': this.updateChildSetting }))\r\n        })\r\n        return (\r\n            <div className='setting sliderGroup'>\r\n                <span>{this.props.title}<LockToggle clickHandler={this.handleLockClick} value={this.state.locked} /></span>\r\n                {kidsWithProps}\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport Slider from './Slider.js';\r\nimport Toggle from './Toggle.js';\r\nimport ImageToggle from './ImageToggle.js';\r\nimport LockingSliderGroup from './LockingSliderGroup.js';\r\nimport './css/Settings.scss';\r\n\r\n// const equal = require('fast-deep-equal/es6/react');\r\n\r\nexport default class Settings extends React.Component {\r\n    constructor() {\r\n        super();\r\n    }\r\n    render() {\r\n        return (\r\n            <div className='settings'>\r\n                <ImageToggle></ImageToggle>\r\n                <LockingSliderGroup updateSetting={this.props.updateSetting} title='Element Scale'>\r\n                    <Slider value={this.props.settings.elementScaleX} title='X' id='elementScaleX' min='0.01' max='10' step='.1'></Slider>\r\n                    <Slider value={this.props.settings.elementScaleY} title='Y' id='elementScaleY' min='0.01' max='10' step='.1'></Slider>\r\n                </LockingSliderGroup>\r\n                <Slider updateSetting={this.props.updateSetting} value={this.props.settings.elementRotation} title='Element Rotation' id='elementRotation' min='0' max='360' step='.1'></Slider>\r\n                <Slider updateSetting={this.props.updateSetting} value={this.props.settings.gridSkew} title='Grid Skew' id='gridSkew' min='-5' max='5' step='.001'></Slider>\r\n                <Toggle value={this.props.settings.gridActive} id='gridActive' updateSetting={this.props.updateSetting} title='Enable Grid'></Toggle>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react'\r\n\r\nexport default class Shape extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n    render() {\r\n        if (this.props.shape === 'circle') {\r\n            return (<circle transform={this.props.transform} key={'element-' + this.props.key} className='element' cx={this.props.width / 2} cy={this.props.width / 2} r={this.props.width}></circle>)\r\n        } else if (this.props.shape === 'rect') {\r\n            return (<rect transform={this.props.transform} key={'element-' + this.props.key} className='element' x={0} y={0} width={this.props.width} height={this.props.height}></rect>)\r\n        }\r\n    }\r\n}","import React from 'react';\nimport Settings from './Settings';\nimport Shape from './Shape';\nimport design from './design';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      settings: {\n        gridID: \"6x8\",\n        gridColumns: 6,\n        gridRows: 8,\n        gridSkew: 1,\n        gridActive: true,\n        globalScale: 100,\n        padding: 100,\n        letter: 'B',\n        elementScaleX: 1,\n        elementScaleY: 1.8,\n        elementRotation: 80,\n      }\n    }\n    this.updateSetting = this.updateSetting.bind(this);\n  }\n\n  updateSetting(setting, value) {\n    this.setState((prevState) => {\n      if (prevState.settings[setting] !== null) {\n        prevState.settings[setting] = value;\n      } else {\n        console.error(`Attempted to update non-existing setting ${setting}`)\n      }\n      return prevState;\n    })\n  }\n\n  render() {\n    const rows = []\n    const cols = []\n    const elements = []\n    let g = design.grids[this.state.settings.gridID];\n\n    let s = this.state.settings.globalScale;\n    let p = this.state.settings.padding;\n\n    if (this.state.settings.gridActive) {\n      for (let i = 0; i < this.state.settings.gridRows + 1; i++) {\n        let x1 = p + (((this.state.settings.gridSkew * s) / this.state.settings.gridRows) * i);\n        let y1 = p + i * s;\n        let x2 = (p + this.state.settings.gridColumns * s) + ((this.state.settings.gridSkew * s) / this.state.settings.gridRows * i);\n        let y2 = p + i * s;\n        rows.push(<line key={'row-' + i} x1={x1} y1={y1} x2={x2} y2={y2}></line>)\n      }\n\n      for (let i = 0; i < this.state.settings.gridColumns + 1; i++) {\n        let x1 = p + i * s;\n        let y1 = p;\n        let x2 = (p + i * s) + this.state.settings.gridSkew * s;\n        let y2 = (p + this.state.settings.gridRows * s);\n        cols.push(<line key={'col-' + i} x1={x1} y1={y1} x2={x2} y2={y2}></line>)\n      }\n    }\n\n    for (let i = 0; i < g.letters[this.state.settings.letter].positions.length; i++) {\n      let pos = g.letters[this.state.settings.letter].positions[i];\n      let defaultWidth = 30;\n      let defaultHeight = 30;\n      let sizeScaled = 30 * this.state.settings.elementScale;\n      let widthScaled = defaultWidth * this.state.settings.elementScaleX;\n      let heightScaled = defaultHeight * this.state.settings.elementScaleY;\n      \n      let gridPointX = (pos[0] * s + p) + ((this.state.settings.gridSkew * s) / this.state.settings.gridRows * pos[1]);\n      let x = gridPointX / this.state.settings.elementScaleX;\n      let y = (pos[1] * s + p) / this.state.settings.elementScaleY;\n      let transform = `translate(${-widthScaled / 2} ${-heightScaled / 2}) scale(${this.state.settings.elementScaleX} ${this.state.settings.elementScaleY}) translate(${x} ${y})`;\n      elements.push(\n        <Shape shape='circle' transform={transform} width={defaultWidth} height={defaultHeight} key={i}></Shape>\n      )\n    }\n\n    return (\n      <>\n        <svg width='2000' height='2000'>\n          {elements}\n          {rows}\n          {cols}\n        </svg>\n        <Settings updateSetting={this.updateSetting} settings={this.state.settings}></Settings>\n      </>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}