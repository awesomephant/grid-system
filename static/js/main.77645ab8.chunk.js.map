{"version":3,"sources":["Slider.js","Toggle.js","Dropdown.js","LockToggle.js","LockingSliderGroup.js","TextInput.js","Settings.js","Font.js","Shape.js","Glyph.js","App.js","serviceWorker.js","index.js"],"names":["Slider","props","handleChange","bind","e","this","updateSetting","id","parseFloat","target","value","valueStyle","left","max","className","htmlFor","title","onChange","name","type","min","step","style","React","Component","Toggle","inputRef","createRef","handleClick","checked","current","click","data-active","onClick","ref","Dropdown","state","selected","setting","optionItems","options","map","op","key","LockToggle","clickHandler","icon","viewBox","d","fill","data-locked","LockingSliderGroup","locked","controlledSettings","updateChildSetting","handleLockClick","Children","children","k","push","setState","i","length","cs","console","log","kidsWithProps","cloneElement","TextInput","Settings","settings","text","showGrid","elementShape","elementScaleX","elementScaleY","elementRotation","gridSkew","cellHeight","cellWidth","spacing","font","Shape","shape","transform","position","rotate","cx","width","cy","r","x","y","height","Glyph","rows","cols","elements","g","grids","gridID","gridRows","x1","y1","x2","gridColumns","y2","vectorEffect","positionsList","letters","replace","split","row","Math","floor","columns","pos","widthScaled","heightScaled","App","editModeEnabled","gridActive","padding","smoothing","updateWindowDimensions","window","addEventListener","innerWidth","innerHeight","prevState","error","toLowerCase","gridWidth","gridHeight","baseX","baseY","glyphs","currentX","currentY","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.77645ab8.chunk.js","sourcesContent":["import React from 'react';\r\nimport './css/Slider.scss';\r\n\r\nexport default class Slider extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n    handleChange(e) {\r\n        this.props.updateSetting(this.props.id, parseFloat(e.target.value))\r\n    }\r\n    render() {\r\n        let valueStyle = {\r\n            left: ((this.props.value / this.props.max) * 100) + '%'\r\n        }\r\n        return (\r\n            <div className='setting slider'>\r\n                <label htmlFor={this.props.id}>{this.props.title}</label>\r\n                <div className='slider-track'>\r\n                    <input className='slider-input' onChange={this.handleChange} name={this.props.id} type='range' min={this.props.min} max={this.props.max} step={this.props.step} value={this.props.value}></input>\r\n                    <div style={valueStyle} className='slider-value'>\r\n                        <input className='value-input' onChange={this.handleChange} name={this.props.id} type='number' min={this.props.min} max={this.props.max} step={this.props.step} value={this.props.value}></input>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport './css/Toggle.scss'\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Toggle extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.inputRef = React.createRef()\r\n        this.handleClick = this.handleClick.bind(this)\r\n        this.handleChange = this.handleChange.bind(this)\r\n    }\r\n    handleChange(e) {\r\n        const value = e.target.type === 'checkbox' ? e.target.checked : e.target.value;\r\n        this.props.updateSetting(this.props.id, value)\r\n    }\r\n    handleClick(e) {\r\n        this.inputRef.current.click()\r\n    }\r\n    render() {\r\n        return (\r\n            <div className='setting toggle'>\r\n                <label htmlFor={this.props.id}>{this.props.title || this.props.id}</label>\r\n                <div data-active={this.props.value} className=\"toggle-body\" onClick={this.handleClick}>\r\n                    <div className=\"toggle-element\"></div>\r\n                </div>\r\n                <input ref={this.inputRef} onChange={this.handleChange} name={this.props.id} type='checkbox' checked={this.props.value}></input>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nToggle.propTypes = {\r\n    id: PropTypes.string.isRequired,\r\n    value: PropTypes.bool.isRequired,\r\n    title: PropTypes.string,\r\n    handleChange: PropTypes.func,\r\n}\r\n\r\nexport default Toggle;","import React from 'react';\r\n\r\nexport default class Dropdown extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            selected: 0\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n    handleChange(e) {\r\n        const setting = this.props.id;\r\n        this.props.updateSetting(setting, e.target.value)\r\n    }\r\n    render() {\r\n        const optionItems = this.props.options.map((op) => {\r\n            return (<option key={`op-${op}`} value={op}>{op}</option>)\r\n        })\r\n        return (\r\n            <div className='setting dropdown'>\r\n                <label htmlFor={this.props.id}>{this.props.title}</label>\r\n                <select value={this.props.value} id={this.props.id} onChange={this.handleChange}>\r\n                    {optionItems}\r\n                </select>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react'\r\n\r\nexport default class LockToggle extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.handleClick = this.handleClick.bind(this)\r\n    }\r\n    handleClick() {\r\n        this.props.clickHandler()\r\n    }\r\n    render() {\r\n        let icon = null;\r\n        if (this.props.value === true) {\r\n            icon =<svg viewBox=\"0 0 24 24\"> <path d=\"M10.59,13.41C11,13.8 11,14.44 10.59,14.83C10.2,15.22 9.56,15.22 9.17,14.83C7.22,12.88 7.22,9.71 9.17,7.76V7.76L12.71,4.22C14.66,2.27 17.83,2.27 19.78,4.22C21.73,6.17 21.73,9.34 19.78,11.29L18.29,12.78C18.3,11.96 18.17,11.14 17.89,10.36L18.36,9.88C19.54,8.71 19.54,6.81 18.36,5.64C17.19,4.46 15.29,4.46 14.12,5.64L10.59,9.17C9.41,10.34 9.41,12.24 10.59,13.41M13.41,9.17C13.8,8.78 14.44,8.78 14.83,9.17C16.78,11.12 16.78,14.29 14.83,16.24V16.24L11.29,19.78C9.34,21.73 6.17,21.73 4.22,19.78C2.27,17.83 2.27,14.66 4.22,12.71L5.71,11.22C5.7,12.04 5.83,12.86 6.11,13.65L5.64,14.12C4.46,15.29 4.46,17.19 5.64,18.36C6.81,19.54 8.71,19.54 9.88,18.36L13.41,14.83C14.59,13.66 14.59,11.76 13.41,10.59C13,10.2 13,9.56 13.41,9.17Z\" /></svg>\r\n        } else {\r\n            icon =<svg viewBox=\"0 0 24 24\">   <path fill=\"currentColor\" d=\"M2,5.27L3.28,4L20,20.72L18.73,22L13.9,17.17L11.29,19.78C9.34,21.73 6.17,21.73 4.22,19.78C2.27,17.83 2.27,14.66 4.22,12.71L5.71,11.22C5.7,12.04 5.83,12.86 6.11,13.65L5.64,14.12C4.46,15.29 4.46,17.19 5.64,18.36C6.81,19.54 8.71,19.54 9.88,18.36L12.5,15.76L10.88,14.15C10.87,14.39 10.77,14.64 10.59,14.83C10.2,15.22 9.56,15.22 9.17,14.83C8.12,13.77 7.63,12.37 7.72,11L2,5.27M12.71,4.22C14.66,2.27 17.83,2.27 19.78,4.22C21.73,6.17 21.73,9.34 19.78,11.29L18.29,12.78C18.3,11.96 18.17,11.14 17.89,10.36L18.36,9.88C19.54,8.71 19.54,6.81 18.36,5.64C17.19,4.46 15.29,4.46 14.12,5.64L10.79,8.97L9.38,7.55L12.71,4.22M13.41,9.17C13.8,8.78 14.44,8.78 14.83,9.17C16.2,10.54 16.61,12.5 16.06,14.23L14.28,12.46C14.23,11.78 13.94,11.11 13.41,10.59C13,10.2 13,9.56 13.41,9.17Z\" /></svg>\r\n        }\r\n        return (\r\n            <button data-locked={this.props.value} onClick={this.handleClick} className='lockToggle'>\r\n                {icon}\r\n            </button>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport LockToggle from './LockToggle.js'\r\n\r\nexport default class LockingSliderGroup extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            locked: true,\r\n            controlledSettings: []\r\n        }\r\n        this.updateChildSetting = this.updateChildSetting.bind(this)\r\n        this.handleLockClick = this.handleLockClick.bind(this)\r\n\r\n        React.Children.map(this.props.children, k => {\r\n            this.state.controlledSettings.push(k.props.id)\r\n        })\r\n\r\n\r\n    }\r\n\r\n    handleLockClick(){\r\n        if (this.state.locked === true){\r\n            this.setState({locked: false});\r\n        } else {\r\n            this.setState({locked: true});\r\n        }\r\n    }\r\n\r\n    updateChildSetting(id, value) {\r\n        this.props.updateSetting(id, value)\r\n        if (this.state.locked === true) {\r\n            for (let i = 0; i < this.state.controlledSettings.length; i++) {\r\n                let cs = this.state.controlledSettings[i];\r\n                console.log(id)\r\n                console.log(cs)\r\n                if (cs !== id) { //avoid loop\r\n                    this.props.updateSetting(cs, value)\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let kidsWithProps = React.Children.map(this.props.children, k => {\r\n            return (React.cloneElement(k, { 'updateSetting': this.updateChildSetting }))\r\n        })\r\n        return (\r\n            <div className='setting sliderGroup'>\r\n                <span>{this.props.title}<LockToggle clickHandler={this.handleLockClick} value={this.state.locked} /></span>\r\n                {kidsWithProps}\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nexport default class TextInput extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n    handleChange(e) {\r\n        this.props.updateSetting(this.props.id, e.target.value)\r\n    }\r\n    render() {\r\n        return (\r\n            <div className='setting text'>\r\n                <label htmlFor={this.props.id}>{this.props.title}</label>\r\n                <input className='text-input' onChange={this.handleChange} name={this.props.id} type='text' value={this.props.value}></input>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport Slider from './Slider.js';\r\nimport Toggle from './Toggle.js';\r\nimport Dropdown from './Dropdown.js';\r\nimport LockingSliderGroup from './LockingSliderGroup.js';\r\nimport TextInput from \"./TextInput.js\"\r\nimport './css/Settings.scss';\r\n\r\n// const equal = require('fast-deep-equal/es6/react');\r\n\r\nexport default class Settings extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className='settings'>\r\n                <h2>Grid System Type</h2>\r\n                <TextInput updateSetting={this.props.updateSetting} value={this.props.settings.text} title='Text' id='text'></TextInput>\r\n                <Toggle id=\"showGrid\" updateSetting={this.props.updateSetting} value={this.props.settings.showGrid} title=\"Show Grid\"></Toggle>\r\n                <Dropdown updateSetting={this.props.updateSetting} options={['circle', 'rect']} value={this.props.settings.elementShape} id='elementShape' title='Element Shape'></Dropdown>\r\n\r\n                <LockingSliderGroup updateSetting={this.props.updateSetting} title=\"Element Scale\">\r\n                    <Slider value={this.props.settings.elementScaleX} title='X' id='elementScaleX' min='0.01' max='10' step='.1'></Slider>\r\n                    <Slider value={this.props.settings.elementScaleY} title='Y' id='elementScaleY' min='0.01' max='10' step='.1'></Slider>\r\n                </LockingSliderGroup>\r\n\r\n                <Slider updateSetting={this.props.updateSetting} value={this.props.settings.elementRotation} title='Element Rotation' id='elementRotation' min='0' max='360' step='.1'></Slider>\r\n                <Slider updateSetting={this.props.updateSetting} value={this.props.settings.gridSkew} title='Grid Skew' id='gridSkew' min='-350' max='350' step='.001'></Slider>\r\n\r\n                <LockingSliderGroup updateSetting={this.props.updateSetting} title=\"Grid Size\">\r\n                    <Slider value={this.props.settings.cellHeight} title='Height' id='cellHeight' min='5' max='150' step='.001'></Slider>\r\n                    <Slider value={this.props.settings.cellWidth} title='Width' id='cellWidth' min='5' max='150' step='.001'></Slider>\r\n                </LockingSliderGroup>\r\n\r\n                <Slider updateSetting={this.props.updateSetting} value={this.props.settings.spacing} title='Grid Spacing' id='spacing' min='-150' max='150' step='.001'></Slider>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n","const font = {\r\n    \"grids\": {\r\n        \"6x8\": {\r\n            \"columns\": 6,\r\n            \"rows\": 8,\r\n            \"letters\": {\r\n                \"/\": \"000001 000010 000100 001000 010000 010000 100000 100000\",\r\n                \"a\": \"011110 100001 100001 100001 111111 100001 100001 100001\",\r\n                \"b\": \"111110 100001 100001 111110 100001 100001 100001 111110\",\r\n                \"c\": \"011111 100000 100000 100000 100000 100000 100000 011111\",\r\n                \"d\": \"111110 100001 100001 100001 100001 100001 100001 111110\",\r\n                \"e\": \"011111 100000 100000 111111 100000 100000 100000 011111\",\r\n                \"f\": \"011111 100000 100000 111111 100000 100000 100000 100000\",\r\n                \"g\": \"011111 100000 100000 100111 100001 100001 100001 011110\",\r\n                \"h\": \"100001 100001 100001 111111 100001 100001 100001 100001\",\r\n                \"i\": \"111110 001000 001000 001000 001000 001000 001000 111110\",\r\n                \"j\": \"100000 100000 100000 100000 100001 100001 100001 011110\",\r\n                \"k\": \"100001 100010 100100 111000 101000 100100 100010 100001\",\r\n                \"l\": \"100000 100000 100000 100000 100000 100000 100000 011111\",\r\n                \"m\": \"100010 110110 101010 100010 100010 100010 100010 100010\",\r\n                \"n\": \"001100 010010 100001 100001 100001 100001 100001 100001\",\r\n                \"o\": \"011110 100001 100001 100001 100001 100001 100001 011110\",\r\n                \"p\": \"011110 100001 100001 100001 111110 100000 100000 100000\",\r\n                \"q\": \"011110 100001 100001 100001 101001 100101 100011 011100\",\r\n                \"r\": \"011110 100001 100001 100001 111110 100100 100010 100001\",\r\n                \"s\": \"011111 100000 100000 011110 000001 000001 000001 111110\",\r\n                \"t\": \"111110 001000 001000 001000 001000 001000 001000 001000\",\r\n                \"u\": \"100001 100001 100001 100001 100001 100001 100001 011110\",\r\n                \"v\": \"100001 100001 100001 100001 100001 100001 010010 001100\",\r\n                \"w\": \"100001 100001 100001 100001 100001 100001 101101 010010\",\r\n                \"x\": \"100001 010010 001100 001100 001100 001100 010010 100001\",\r\n                \"y\": \"100001 100001 100001 100001 111110 100000 100000 011111\",\r\n                \"z\": \"111111 000001 000010 000100 001000 010000 100000 111111\",\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default font;","import React from 'react'\r\n\r\nexport default class Shape extends React.Component {\r\n    render() {\r\n        if (this.props.shape === 'circle') {\r\n            return (\r\n                <g transform={this.props.position}>\r\n                    <g transform={this.props.rotate}>\r\n                        <circle transform={this.props.transform} key={'element-' + this.props.id} className='element' cx={this.props.width / 2} cy={this.props.width / 2} r={this.props.width}></circle>\r\n                    </g>\r\n                </g>\r\n            )\r\n        } else if (this.props.shape === 'rect') {\r\n            return (\r\n                <g transform={this.props.position}>\r\n                    <g transform={this.props.rotate}>\r\n                        <rect transform={this.props.transform} key={'element-' + this.props.id} className='element' x={0} y={0} width={this.props.width} height={this.props.height}></rect>\r\n                    </g>\r\n                </g>\r\n            )\r\n        }\r\n    }\r\n}","import React from 'react'\r\nimport font from './Font';\r\nimport Shape from './Shape';\r\n\r\nconst defaultSize = 30;\r\n\r\nexport default class Glyph extends React.Component {\r\n    render() {\r\n        const rows = []\r\n        const cols = []\r\n        const elements = []\r\n        let g = font.grids[this.props.settings.gridID];\r\n        if (this.props.settings.showGrid) {\r\n            // Draw Rows\r\n            for (let i = 0; i < this.props.settings.gridRows; i++) {\r\n                let x1 = (this.props.settings.gridSkew / (this.props.settings.gridRows - 1)) * i + this.props.x;\r\n                let y1 = i * this.props.settings.cellHeight + this.props.y;\r\n                let x2 = ((this.props.settings.gridColumns - 1) * this.props.settings.cellWidth) + ((this.props.settings.gridSkew) / (this.props.settings.gridRows - 1) * i) + this.props.x;\r\n                let y2 = i * this.props.settings.cellHeight + this.props.y;\r\n                rows.push(<line vectorEffect=\"non-scaling-stroke\" key={'row-' + i} x1={x1} y1={y1} x2={x2} y2={y2}></line>)\r\n            }\r\n\r\n            // Draw Columns\r\n            for (let i = 0; i < this.props.settings.gridColumns; i++) {\r\n                let x1 = i * this.props.settings.cellWidth + this.props.x;\r\n                let y1 = this.props.y;\r\n                let x2 = i * this.props.settings.cellWidth + this.props.x + parseFloat(this.props.settings.gridSkew);\r\n                let y2 = ((this.props.settings.gridRows - 1) * this.props.settings.cellHeight) + this.props.y;\r\n                cols.push(<line vectorEffect=\"non-scaling-stroke\" key={'col-' + i} x1={x1} y1={y1} x2={x2} y2={y2}></line>)\r\n            }\r\n        }\r\n        const positionsList = g.letters[this.props.g].replace(/ /g, '').split('');\r\n        for (let i = 0; i < positionsList.length; i++) {\r\n            let row = Math.floor(i / g.columns);\r\n            const pos = [(i - row * g.columns), row]\r\n            let widthScaled = defaultSize * this.props.settings.elementScaleX;\r\n            let heightScaled = defaultSize * this.props.settings.elementScaleY;\r\n            let gridPointX = (pos[0] * this.props.settings.cellWidth) + (this.props.settings.gridSkew / (this.props.settings.gridRows - 1) * pos[1]) + this.props.x;\r\n            let x = (gridPointX / this.props.settings.elementScaleX);\r\n            let y = ((pos[1] * this.props.settings.cellHeight) + this.props.y) / this.props.settings.elementScaleY;\r\n\r\n            let rotate = `rotate(${this.props.settings.elementRotation}, ${x * this.props.settings.elementScaleX}, ${y * this.props.settings.elementScaleY})`;\r\n            let transform = `translate(${-widthScaled / 2} ${-heightScaled / 2}) scale(${this.props.settings.elementScaleX} ${this.props.settings.elementScaleY}) translate(${x} ${y})`;\r\n\r\n            if (positionsList[i] === \"1\") {\r\n                elements.push(\r\n                    <Shape key={`shape-${i}`} shape={this.props.settings.elementShape} rotate={rotate} transform={transform} width={defaultSize} height={defaultSize} id={i}></Shape>\r\n                )\r\n            }\r\n        }\r\n\r\n\r\n        return (\r\n            <g>\r\n                {elements}\r\n                {rows}\r\n                {cols}\r\n            </g>\r\n        )\r\n    }\r\n}","import React from 'react';\nimport Settings from './Settings';\nimport Glyph from './Glyph';\nimport font from \"./Font\"\n\nconst defaultSize = 30;\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      width: 0,\n      height: 0,\n      editModeEnabled: false,\n      settings: {\n        showGrid: true,\n        gridID: \"6x8\",\n        gridColumns: 6,\n        gridRows: 8,\n        gridSkew: 12,\n        gridActive: true,\n        padding: 100,\n        elementScaleX: 1.5,\n        elementScaleY: 1.5,\n        elementRotation: 20,\n        elementShape: 'circle',\n        cellWidth: 30,\n        cellHeight: 40,\n        smoothing: 10,\n        spacing: 17,\n        text: \"Space\"\n      }\n\n    }\n    this.updateSetting = this.updateSetting.bind(this);\n    this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\n\n    window.addEventListener('resize', this.updateWindowDimensions);\n  }\n\n  componentDidMount() {\n    this.updateWindowDimensions()\n  }\n\n  updateWindowDimensions() {\n    this.setState({ width: window.innerWidth, height: window.innerHeight });\n  }\n\n  updateSetting(setting, value) {\n    this.setState((prevState) => {\n      if (prevState.settings[setting] !== null) {\n        prevState.settings[setting] = value;\n      } else {\n        console.error(`Attempted to update non-existing setting ${setting}`)\n      }\n      return prevState;\n    })\n  }\n\n  render() {\n    const letters = this.state.settings.text.toLowerCase().split('');\n    const gridWidth = this.state.settings.gridColumns * this.state.settings.cellWidth + defaultSize * this.state.settings.elementScaleX + this.state.settings.spacing;\n    const gridHeight = this.state.settings.gridRows * this.state.settings.cellHeight;\n    let baseX = (this.state.width / 1.92) - ((gridWidth / 2) * letters.length);\n    let baseY = (this.state.height / 2) - (gridHeight / 2)\n\n    const glyphs = letters.map((g, i) => {\n      if (font.grids[this.state.settings.gridID].letters[g]) {\n        let currentX = baseX + gridWidth * i\n        let currentY = baseY\n        return (\n          <Glyph key={`glyph-${i}`} settings={this.state.settings} g={g} y={currentY} x={currentX}></Glyph>\n        )\n      }\n      return null;\n    })\n\n\n    return (\n      <div>\n        <svg className='testPreview' width={this.state.width} height={this.state.height}>{glyphs}</svg>\n        <Settings updateSetting={this.updateSetting} settings={this.state.settings}></Settings>\n      </div>\n    );\n  }\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}